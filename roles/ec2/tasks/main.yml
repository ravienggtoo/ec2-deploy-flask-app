# tasks file for ec2
- name: Creating a Security group for EC2 instance
  ec2_group:
    name: "{{ app_name }}-security-group"
    description: "Security group for EC2 instance"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    tags:
      Product: "{{ app_name }}"
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0

  register: sg

- name: Launching EC2 instance
  ec2:
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    key_name: "{{ ec2_instance_key_pair }}"
    region: "{{ aws_region }}"
    image: "{{ ec2_instance_image }}"
    instance_type: "{{ ec2_instance_type }}"
    group_id: "{{ sg.group_id }}"
    wait: yes
    count: "{{ ec2_instance_count }}"
    vpc_subnet_id: "{{ vpc_subnet_id }}"
    assign_public_ip: "{{  ec2_assign_public_ip }}"
    user_data: |
               #!/bin/sh
               sudo apt-get update && apt-get -y install python && rm -rf /var/cache/apt/archives/*
    instance_tags:
      Product: "{{ app_name }}"

  register: ec2

- name: Adding EC2 Instance IP to Inventory
  add_host:
    name: "{{ item.public_ip }}"
    groups: "ec2"
  with_items: 
    - "{{ ec2.instances }}"

- name: Wait for SSH to come up
  delegate_to: "{{ item.public_ip }}"
  remote_user: "{{ ec2_user }}"
  wait_for_connection:
    delay: 60
    timeout: 320
  with_items: "{{ ec2.instances }}"
